{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appName": {
            "type": "string",  
            "minLength": 3,
            "maxLength": 10,
            "metadata": {
              "description": "This should be a short (10 or fewer characters) unique string that will be a prefix to all of the resources deployed. DO NOT INCLUDE ANY EXTRANEOUS CHARACTERS SUCH AS DASHES, UNDERSCORES, ETC."
            }
        },
        "deploymentLocation": {
            "type": "string",
            "allowedValues": [
              "eastus",
              "eastus2",
              "centralus",
              "northcentralus",
              "southcentralus",
              "westus"
            ],
            "metadata": {
              "description": "The default deployment location for the resources needed for the workshop. Note that this does NOT have to be the same as the location chosen for the Resource Group."
            }
        }
    },
    "variables": {
        "cleanAppName": "[replace(replace(replace(toLower(parameters('appName')), '-', ''), '_', ''), '.', '')]",
        "labVmName": "[concat(variables('cleanAppName'), 'lab')]",
        "labVmUsername": "databricks",
        "labVmPassword": "Password.1!!",
        "vmStorageAccountName": "[concat(variables('cleanAppName'), 'vmstorage')]",
        "virtualNetworkName": "[concat(variables('cleanAppName'), 'labnetwork')]",
        "OSDiskName": "labvmosdisk",
        "subnetName": "[concat(variables('cleanAppName'), 'subnet')]",
        "nicName": "[concat(variables('cleanAppName'), 'nic')]",
        "publicIPAddressName": "[concat(variables('cleanAppName'), 'publicip')]",
        "vmOsVersion": "2016-Datacenter",
        "vmSize": "Standard_DS2_v2",
        "addressPrefix": "10.0.0.0/16",
        "subnetPrefix": "10.0.0.0/24",
        "publicIPAddressType": "Dynamic",
        "imagePublisher": "MicrosoftWindowsServer", 
        "imageOffer": "WindowsServer", 
        "clusterNodeSize": "Standard_DS4_v2",
        "vmApiVersion": "2017-12-01",
        "nicApiVersion": "2018-02-01", 
        "vmShutdownName": "[concat(variables('cleanAppName'), 'shutdown')]",
        "nsgName": "[concat(variables('cleanAppName'), 'nsg')]",
        "storageName": "[concat(variables('cleanAppName'), 'storage')]",
        "JupyterName": "[concat(variables('cleanAppName'), 'Jupyter')]",
        "nySqlName": "[concat(variables('cleanAppName'), 'mysql')]",
        "rdpName": "[concat(variables('cleanAppName'), 'rdp')]",
        "databricksPricing": "premium",
        "databricksName": "[concat(variables('cleanAppName'), 'databricks')]"
    },
    "resources": [
        {
            "comments": "Lab VM",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('labVmName')]",
            "apiVersion": "[variables('vmApiVersion')]",
            "location": "[parameters('deploymentLocation')]",         
            "plan": {
                "name": "windows2016",
                "product": "windows-data-science-vm",
                "publisher": "microsoft-ads"
            },
            "scale": null,
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[varibales('imagePublisher')]",
                        "offer": "[varibales('imageOffer')]",
                        "sku": "[varibales('vmOsVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[variables('labvmosdisk')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[variables('labVmName')]",
                    "adminUsername": "[variables('labVmUsername')]",
                    "adminPassword": "[varaibles('labVmPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https', '://', varibales('vmStorageAccountName'), '.blob.core.windows.net', '/')]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', varibales('vmStorageAccountName'))]"
            ]
        },
        {
            "type": "microsoft.devtestlab/schedules",
            "name": "[variables('vmShutdownName')]",
            "apiVersion": "2016-05-15",
            "location": "[parameters('deploymentLocation')]",
            "scale": null,
            "properties": {
                "status": "Enabled",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "1900"
                },
                "timeZoneId": "Central Standard Time",
                "notificationSettings": {
                    "status": "Enabled",
                    "timeInMinutes": 30
                },
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('labVmName'))]",
                "provisioningState": "Succeeded",
                "uniqueIdentifier": "[uniqueString(resourceGroup().id]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('labVmName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "[variables('nicApiVersion')",
            "location": "[parameters('deploymentLocation')]",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.0.1.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', varaibles('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                },
                "primary": true,
                "virtualMachine": {
                    "id": "[resourceId('Microsoft.Compute/virtualMachines', variables('labVmName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables(''), variables('subnets_default_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables(''))]",
                "[resourceId('Microsoft.Compute/virtualMachines', variables('labVmName'))]"
            ]
        },
        {
            "comments": "Network Security Group",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2018-02-01",
            "location": "[parameters('deploymentLocation')]",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "[uniqueString(resourceGroup().id]",
                "securityRules": [
                    {
                        "name": "Jupyter",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "9999",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1010,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "MSSQL",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "1433",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1020,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1030,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "comments": "IP Addresses'.",
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "name": "[variables('publicIPAddresName')]",
            "apiVersion": "2018-02-01",
            "location": "[parameters('deploymentLocation')]",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "[uniqueString(resourceGroup().id]",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            },
            "dependsOn": []
        },
        {
            "comments": "Virtual Networks'.",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "apiVersion": "2018-02-01",
            "location": "[parameters('deploymentLocation')]",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "[uniqueString(resourceGroup().id]",
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.1.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.0.1.0/24"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            },
            "dependsOn": []
        },
        {
            "comments": "Storage Accounts",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[variables('vmStorageAccountName')]",
            "apiVersion": "[variables('vmApiVersion')]",
            "location": "[parameters('deploymentLocation')]",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Storage Accounts",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[variables('storageName')]",
            "apiVersion": "2017-10-01",
            "location": "[parameters('deploymentLocation')]",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Security Rules Jupyter",
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "name": "[concat(variables('nsgName'), '/', variables('JupyterName'))]",
            "apiVersion": "2018-02-01",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "9999",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1010,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ]
        },
        {
            "comments": "Security Rules MySQL'.",
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "name": "[concat(variables('nsgName'), '/', variables('mySqlName'))]",
            "apiVersion": "2018-02-01",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "1433",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1020,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ]
        },
        {
            "comments": "Security Rules allow RDP",
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "name": "[concat(variables('nsgName'), '/', variables('rdpName'))]",
            "apiVersion": "2018-02-01",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1030,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ]
        },
        {
            "comments": "Subnet",
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(variables('virtualNetworkName'), '/', variables('subnetName'))]",
            "apiVersion": "2018-02-01",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.0.1.0/24"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ]
        }
        {
            "comments": "Databricks Workspace",
            "type": "Microsoft.Databricks/workspaces",
            "name": "[variables('databricksName')]",
            "location": "[parameters('deploymentLocation')]",
            "apiVersion": "2018-04-01",
            "sku": {
                "name": "[variables('databricksPricing')]"
        },
            "properties": {
                "ManagedResourceGroupId": "[variables('databricksName')]"
        }
      }
    ]
}
